apiVersion: tekton.dev/v1
metadata:
  name: pipepline1
kind: Pipeline
spec:
  params:
    - name: name
      default: ["output1", "output2"]
  tasks:
    - name: pipepline-task2
      params:
        - name: age
          value: output1           
      matrix:
        params:
          - name: name
            value: $(params.name[*])                     
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/yogananth-subramanian/testrepo
          - name: revision
            value: main
          - name: pathInRepo
            value: integration-tests/test-task-result1.yaml
    - name: pipepline-task1
      runAfter:
        - pipepline-task2    
      params:
        - name: age
          value: output0   
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/yogananth-subramanian/testrepo
          - name: revision
            value: main
          - name: pathInRepo
            value: integration-tests/test-task-result.yaml
      matrix:
        params:
          - name: name
            value: $(params.name[*])            
    - name: pipepline-task3
      runAfter:
        - pipepline-task1
      params:
        - name: myname
          value: $(tasks.pipepline-task2.results.TEST_TASK_OUTPUT1[*])         
      taskSpec:
        params:
          - name: myname
            type: array
        steps:
          - name: step1
            image: registry.access.redhat.com/ubi8/ubi
            args: ["$(params.myname[*])"]
            script: |
              #!/bin/env bash
              printf "%s\n" "$@"
    - name: summarize-result
      runAfter:
        - pipepline-task1
        - pipepline-task2
      params:
        - name: krkn-result
          value: $(tasks.pipepline-task2.results.TEST_TASK_OUTPUT1[*])         
      taskSpec:
        params:
          - name: krkn-result
            type: array
        steps:
          - name: step1
            image: registry.access.redhat.com/ubi8/ubi
            args: ["$(params.krkn-result[*])"]
            script: |
              #!/bin/env bash
              printf "%s\n" "$@"
  finally:
    - name: cleanup  
      params:
        - name: aggregateTasksStatus
          value: "$(tasks.status)"
        - name: krkn-result
          value: $(tasks.pipepline-task.results.TEST_TASK_OUTPUT[*])            
      taskSpec:
        results:
          - name: TEST_OUTPUT
        params:
          - name: aggregateTasksStatus
          - name: krkn-result
            type: array
        steps:
        - image: quay.io/yogananth_subramanian/curl-yq-jq
          args: ["$(params.krkn-result[*])"]  
          name: step1
          script: |
            RESULT="SUCCESS"
            if [ $(params.aggregateTasksStatus) == "Failed" ]
            then
              RESULT="FAILURE"
            fi
            TEST_OUTPUT=$(jq -rc --arg date $(date +%s) --arg RESULT "${RESULT}" --null-input \
            '{result: $RESULT, timestamp: $date, failures: 0, successes: 0, warnings: 0}')
            printf "%s\n" "$@"
            echo -n "${TEST_OUTPUT}" | tee $(results.TEST_OUTPUT.path)                         

                                       
        

 

            

