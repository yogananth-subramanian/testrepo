---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: eaas-provision-space
spec:
  description: >-
    Provisions an ephemeral namespace on an EaaS cluster using a SpaceRequest.
    This namespace can then be used to provision other ephemeral environments for testing.
  params:
    - name: ownerKind
      type: string
      default: PipelineRun
      description: >-
        The type of resource that should own the generated SpaceRequest.
        Deletion of this resource will trigger deletion of the SpaceRequest.
        Supported values: `PipelineRun`, `TaskRun`.
    - name: ownerName
      type: string
      description: >-
        The name of the resource that should own the generated SpaceRequest.
        This should either be passed the value of `$(context.pipelineRun.name)`
        or `$(context.taskRun.name)` depending on the value of `ownerKind`.
    - name: ownerUid
      type: string
      description: >-
        The uid of the resource that should own the generated SpaceRequest.
        This should either be passed the value of `$(context.pipelineRun.uid)`
        or `$(context.taskRun.uid)` depending on the value of `ownerKind`.
  results:
    - name: secretRef
      description: Name of a Secret containing a kubeconfig used to access the provisioned space.
      type: string
  steps:
    - name: request-space
      image: registry.redhat.io/openshift4/ose-cli:4.13@sha256:73df37794ffff7de1101016c23dc623e4990810390ebdabcbbfa065214352c7c
      env:
        - name: KONFLUXNAMESPACE
          value: "$(context.taskRun.namespace)"
        - name: OWNER_KIND
          value: $(params.ownerKind)
        - name: OWNER_NAME
          value: $(params.ownerName)
        - name: OWNER_UID
          value: $(params.ownerUid)
        - name: TIER_NAME
          value: konflux-eaas
        - name: PIPELINERUN_NAME
          value: $(context.pipelineRun.name)
        - name: PIPELINERUN_UID
          value: $(context.pipelineRun.uid)   
      script: |
        #!/bin/bash
        set -ex
        set -o pipefail
        echo $OWNER_NAME
        echo $OWNER_UID
        echo $PIPELINERUN_NAME
        echo $PIPELINERUN_UID

        cat <<EOF > space_request.yaml
        apiVersion: toolchain.dev.openshift.com/v1alpha1
        kind: SpaceRequest
        metadata:
          generateName: eaas-spacerequest-
          namespace: $KONFLUXNAMESPACE
          ownerReferences:
          - apiVersion: tekton.dev/v1
            kind: PipelineRun
            name: $OWNER_NAME
            uid: $OWNER_UID
        spec:
          tierName: konflux-eaas
          targetClusterRoles:
          - cluster-role.toolchain.dev.openshift.com/eaas          
        EOF
        cat  space_request.yaml
        SPACEREQUEST_NAME=$(oc create -f space_request.yaml -o=jsonpath='{.metadata.name}')

        if oc wait spacerequests $SPACEREQUEST_NAME --for=condition=Ready --timeout=5m -n $KONFLUXNAMESPACE; then
          secretRef=$(oc get spacerequests $SPACEREQUEST_NAME -o=jsonpath='{.status.namespaceAccess[0].secretRef}')
          echo -n $secretRef | tee $(results.secretRef.path)
          cat $(results.secretRef.path)
        else
          exit 1
        fi
