---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: deploy-operator
spec:
  description: |
    An integration test which provisions an ephemeral Hypershift cluster and deploys an Operator
    bundle from a Konflux snapshot.
  params:
    - description: Snapshot of the application
      name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - description: Namespace where the the Operator bundle will be deployed.
      name: NAMESPACE
      default: default
      type: string
    - name: chaostest
      default: ["application-outages" ]
  tasks:
    - name: parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/integration-examples
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/test_metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
    - name: provision-eaas-space
      runAfter:
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - provision-eaas-space
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/yogananth-subramanian/testrepo.git
          - name: revision
            value: main
          - name: pathInRepo
            value: integration-tests/task-provison-cluster.yaml
      params:
        - name: eaasSpaceSecretRef
          value: $(tasks.provision-eaas-space.results.secretRef)
    - name: deploy-app-krkn
      runAfter:
        - provision-cluster
      params:
        - name: bundleImage
          value: "$(tasks.parse-metadata.results.component-container-image)"
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: eaasSpaceSecretRef
          value: $(tasks.provision-eaas-space.results.secretRef)
        - name: clusterName
          value: "$(tasks.provision-cluster.results.clusterName)"                    
      matrix:
        params:
          - name: chaostest
            value: $(params.chaostest[*])
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/yogananth-subramanian/testrepo.git
          - name: revision
            value: main
          - name: pathInRepo
            value: integration-tests/task-run-app.yaml                         
    - name: run-krkn1
      runAfter:
        - deploy-app-krkn
      params:
        - name: eaasSpaceSecretRef
          value: $(tasks.provision-eaas-space.results.secretRef)
        - name: clusterName
          value: "$(tasks.provision-cluster.results.clusterName)"
      matrix:
        params:
        - name: chaostest
          value: $(tasks.deploy-app-krkn.results.chaos_test_namespace[*])
        - name: url
          value: $(tasks.deploy-app-krkn.results.APP_URL[*])
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/yogananth-subramanian/testrepo.git
          - name: revision
            value: main
          - name: pathInRepo
            value: integration-tests/task-run-krkn-perf-matrix.yaml
    - name: summarize-result
      runAfter:
        - run-krkn1
      params:
        - name: krkn-result
          value: $(tasks.run-krkn1.results.KRKN_OUTPUT[*])         
      taskSpec:
        params:
          - name: krkn-result
            type: array
        steps:
          - name: step1
            image: registry.access.redhat.com/ubi8/ubi
            args: ["$(params.krkn-result[*])"]
            script: |
              #!/bin/env bash
              printf "%s\n" "$@"          
                                            
